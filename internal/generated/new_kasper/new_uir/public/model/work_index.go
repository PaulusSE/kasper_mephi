//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type WorkIndex string

const (
	WorkIndex_Scopus  WorkIndex = "scopus"
	WorkIndex_Rinc    WorkIndex = "rinc"
	WorkIndex_Wac     WorkIndex = "wac"
	WorkIndex_Unknown WorkIndex = "unknown"
)

func (e *WorkIndex) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "scopus":
		*e = WorkIndex_Scopus
	case "rinc":
		*e = WorkIndex_Rinc
	case "wac":
		*e = WorkIndex_Wac
	case "unknown":
		*e = WorkIndex_Unknown
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for WorkIndex enum")
	}

	return nil
}

func (e WorkIndex) String() string {
	return string(e)
}
