//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type StudentStatus string

const (
	StudentStatus_Academic  StudentStatus = "academic"
	StudentStatus_Graduated StudentStatus = "graduated"
	StudentStatus_Studying  StudentStatus = "studying"
	StudentStatus_Expelled  StudentStatus = "expelled"
)

func (e *StudentStatus) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "academic":
		*e = StudentStatus_Academic
	case "graduated":
		*e = StudentStatus_Graduated
	case "studying":
		*e = StudentStatus_Studying
	case "expelled":
		*e = StudentStatus_Expelled
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for StudentStatus enum")
	}

	return nil
}

func (e StudentStatus) String() string {
	return string(e)
}
