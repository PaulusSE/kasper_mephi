//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type DissertationStatus string

const (
	DissertationStatus_Passed DissertationStatus = "passed"
	DissertationStatus_Failed DissertationStatus = "failed"
	DissertationStatus_Todo   DissertationStatus = "todo"
	DissertationStatus_Empty  DissertationStatus = "empty"
)

func (e *DissertationStatus) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "passed":
		*e = DissertationStatus_Passed
	case "failed":
		*e = DissertationStatus_Failed
	case "todo":
		*e = DissertationStatus_Todo
	case "empty":
		*e = DissertationStatus_Empty
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for DissertationStatus enum")
	}

	return nil
}

func (e DissertationStatus) String() string {
	return string(e)
}
