//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Specializations = newSpecializationsTable("public", "specializations", "")

type specializationsTable struct {
	postgres.Table

	//Columns
	SpecID postgres.ColumnInteger
	Title  postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SpecializationsTable struct {
	specializationsTable

	EXCLUDED specializationsTable
}

// AS creates new SpecializationsTable with assigned alias
func (a SpecializationsTable) AS(alias string) *SpecializationsTable {
	return newSpecializationsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SpecializationsTable with assigned schema name
func (a SpecializationsTable) FromSchema(schemaName string) *SpecializationsTable {
	return newSpecializationsTable(schemaName, a.TableName(), a.Alias())
}

func newSpecializationsTable(schemaName, tableName, alias string) *SpecializationsTable {
	return &SpecializationsTable{
		specializationsTable: newSpecializationsTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newSpecializationsTableImpl("", "excluded", ""),
	}
}

func newSpecializationsTableImpl(schemaName, tableName, alias string) specializationsTable {
	var (
		SpecIDColumn   = postgres.IntegerColumn("spec_id")
		TitleColumn    = postgres.StringColumn("title")
		allColumns     = postgres.ColumnList{SpecIDColumn, TitleColumn}
		mutableColumns = postgres.ColumnList{TitleColumn}
	)

	return specializationsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		SpecID: SpecIDColumn,
		Title:  TitleColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
