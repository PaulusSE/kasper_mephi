//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var StudentsSupervisors = newStudentsSupervisorsTable("public", "students_supervisors", "")

type studentsSupervisorsTable struct {
	postgres.Table

	//Columns
	ID           postgres.ColumnString
	StudentID    postgres.ColumnString
	SupervisorID postgres.ColumnString
	StartAt      postgres.ColumnTimestampz
	EndAt        postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type StudentsSupervisorsTable struct {
	studentsSupervisorsTable

	EXCLUDED studentsSupervisorsTable
}

// AS creates new StudentsSupervisorsTable with assigned alias
func (a StudentsSupervisorsTable) AS(alias string) *StudentsSupervisorsTable {
	return newStudentsSupervisorsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new StudentsSupervisorsTable with assigned schema name
func (a StudentsSupervisorsTable) FromSchema(schemaName string) *StudentsSupervisorsTable {
	return newStudentsSupervisorsTable(schemaName, a.TableName(), a.Alias())
}

func newStudentsSupervisorsTable(schemaName, tableName, alias string) *StudentsSupervisorsTable {
	return &StudentsSupervisorsTable{
		studentsSupervisorsTable: newStudentsSupervisorsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                 newStudentsSupervisorsTableImpl("", "excluded", ""),
	}
}

func newStudentsSupervisorsTableImpl(schemaName, tableName, alias string) studentsSupervisorsTable {
	var (
		IDColumn           = postgres.StringColumn("id")
		StudentIDColumn    = postgres.StringColumn("student_id")
		SupervisorIDColumn = postgres.StringColumn("supervisor_id")
		StartAtColumn      = postgres.TimestampzColumn("start_at")
		EndAtColumn        = postgres.TimestampzColumn("end_at")
		allColumns         = postgres.ColumnList{IDColumn, StudentIDColumn, SupervisorIDColumn, StartAtColumn, EndAtColumn}
		mutableColumns     = postgres.ColumnList{StudentIDColumn, SupervisorIDColumn, StartAtColumn, EndAtColumn}
	)

	return studentsSupervisorsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		StudentID:    StudentIDColumn,
		SupervisorID: SupervisorIDColumn,
		StartAt:      StartAtColumn,
		EndAt:        EndAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
