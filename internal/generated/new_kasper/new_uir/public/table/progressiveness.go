//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Progressiveness = newProgressivenessTable("public", "progressiveness", "")

type progressivenessTable struct {
	postgres.Table

	//Columns
	ProgressID      postgres.ColumnString
	StudentID       postgres.ColumnString
	Semester        postgres.ColumnInteger
	Progressiveness postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ProgressivenessTable struct {
	progressivenessTable

	EXCLUDED progressivenessTable
}

// AS creates new ProgressivenessTable with assigned alias
func (a ProgressivenessTable) AS(alias string) *ProgressivenessTable {
	return newProgressivenessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ProgressivenessTable with assigned schema name
func (a ProgressivenessTable) FromSchema(schemaName string) *ProgressivenessTable {
	return newProgressivenessTable(schemaName, a.TableName(), a.Alias())
}

func newProgressivenessTable(schemaName, tableName, alias string) *ProgressivenessTable {
	return &ProgressivenessTable{
		progressivenessTable: newProgressivenessTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newProgressivenessTableImpl("", "excluded", ""),
	}
}

func newProgressivenessTableImpl(schemaName, tableName, alias string) progressivenessTable {
	var (
		ProgressIDColumn      = postgres.StringColumn("progress_id")
		StudentIDColumn       = postgres.StringColumn("student_id")
		SemesterColumn        = postgres.IntegerColumn("semester")
		ProgressivenessColumn = postgres.IntegerColumn("progressiveness")
		allColumns            = postgres.ColumnList{ProgressIDColumn, StudentIDColumn, SemesterColumn, ProgressivenessColumn}
		mutableColumns        = postgres.ColumnList{StudentIDColumn, SemesterColumn, ProgressivenessColumn}
	)

	return progressivenessTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ProgressID:      ProgressIDColumn,
		StudentID:       StudentIDColumn,
		Semester:        SemesterColumn,
		Progressiveness: ProgressivenessColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
