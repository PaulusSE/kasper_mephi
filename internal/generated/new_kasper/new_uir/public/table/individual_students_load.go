//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var IndividualStudentsLoad = newIndividualStudentsLoadTable("public", "individual_students_load", "")

type individualStudentsLoadTable struct {
	postgres.Table

	//Columns
	LoadID         postgres.ColumnString
	TLoadID        postgres.ColumnString
	StudentsAmount postgres.ColumnInteger
	Comment        postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type IndividualStudentsLoadTable struct {
	individualStudentsLoadTable

	EXCLUDED individualStudentsLoadTable
}

// AS creates new IndividualStudentsLoadTable with assigned alias
func (a IndividualStudentsLoadTable) AS(alias string) *IndividualStudentsLoadTable {
	return newIndividualStudentsLoadTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new IndividualStudentsLoadTable with assigned schema name
func (a IndividualStudentsLoadTable) FromSchema(schemaName string) *IndividualStudentsLoadTable {
	return newIndividualStudentsLoadTable(schemaName, a.TableName(), a.Alias())
}

func newIndividualStudentsLoadTable(schemaName, tableName, alias string) *IndividualStudentsLoadTable {
	return &IndividualStudentsLoadTable{
		individualStudentsLoadTable: newIndividualStudentsLoadTableImpl(schemaName, tableName, alias),
		EXCLUDED:                    newIndividualStudentsLoadTableImpl("", "excluded", ""),
	}
}

func newIndividualStudentsLoadTableImpl(schemaName, tableName, alias string) individualStudentsLoadTable {
	var (
		LoadIDColumn         = postgres.StringColumn("load_id")
		TLoadIDColumn        = postgres.StringColumn("t_load_id")
		StudentsAmountColumn = postgres.IntegerColumn("students_amount")
		CommentColumn        = postgres.StringColumn("comment")
		allColumns           = postgres.ColumnList{LoadIDColumn, TLoadIDColumn, StudentsAmountColumn, CommentColumn}
		mutableColumns       = postgres.ColumnList{TLoadIDColumn, StudentsAmountColumn, CommentColumn}
	)

	return individualStudentsLoadTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		LoadID:         LoadIDColumn,
		TLoadID:        TLoadIDColumn,
		StudentsAmount: StudentsAmountColumn,
		Comment:        CommentColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
