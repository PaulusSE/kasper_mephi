//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var AdditionalLoad = newAdditionalLoadTable("public", "additional_load", "")

type additionalLoadTable struct {
	postgres.Table

	//Columns
	LoadID  postgres.ColumnString
	TLoadID postgres.ColumnString
	Name    postgres.ColumnString
	Volume  postgres.ColumnString
	Comment postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type AdditionalLoadTable struct {
	additionalLoadTable

	EXCLUDED additionalLoadTable
}

// AS creates new AdditionalLoadTable with assigned alias
func (a AdditionalLoadTable) AS(alias string) *AdditionalLoadTable {
	return newAdditionalLoadTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AdditionalLoadTable with assigned schema name
func (a AdditionalLoadTable) FromSchema(schemaName string) *AdditionalLoadTable {
	return newAdditionalLoadTable(schemaName, a.TableName(), a.Alias())
}

func newAdditionalLoadTable(schemaName, tableName, alias string) *AdditionalLoadTable {
	return &AdditionalLoadTable{
		additionalLoadTable: newAdditionalLoadTableImpl(schemaName, tableName, alias),
		EXCLUDED:            newAdditionalLoadTableImpl("", "excluded", ""),
	}
}

func newAdditionalLoadTableImpl(schemaName, tableName, alias string) additionalLoadTable {
	var (
		LoadIDColumn   = postgres.StringColumn("load_id")
		TLoadIDColumn  = postgres.StringColumn("t_load_id")
		NameColumn     = postgres.StringColumn("name")
		VolumeColumn   = postgres.StringColumn("volume")
		CommentColumn  = postgres.StringColumn("comment")
		allColumns     = postgres.ColumnList{LoadIDColumn, TLoadIDColumn, NameColumn, VolumeColumn, CommentColumn}
		mutableColumns = postgres.ColumnList{TLoadIDColumn, NameColumn, VolumeColumn, CommentColumn}
	)

	return additionalLoadTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		LoadID:  LoadIDColumn,
		TLoadID: TLoadIDColumn,
		Name:    NameColumn,
		Volume:  VolumeColumn,
		Comment: CommentColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
