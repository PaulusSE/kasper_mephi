//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Exams = newExamsTable("public", "exams", "")

type examsTable struct {
	postgres.Table

	//Columns
	ExamID    postgres.ColumnString
	StudentID postgres.ColumnString
	ExamType  postgres.ColumnInteger
	Semester  postgres.ColumnInteger
	Mark      postgres.ColumnInteger
	SetAt     postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ExamsTable struct {
	examsTable

	EXCLUDED examsTable
}

// AS creates new ExamsTable with assigned alias
func (a ExamsTable) AS(alias string) *ExamsTable {
	return newExamsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ExamsTable with assigned schema name
func (a ExamsTable) FromSchema(schemaName string) *ExamsTable {
	return newExamsTable(schemaName, a.TableName(), a.Alias())
}

func newExamsTable(schemaName, tableName, alias string) *ExamsTable {
	return &ExamsTable{
		examsTable: newExamsTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newExamsTableImpl("", "excluded", ""),
	}
}

func newExamsTableImpl(schemaName, tableName, alias string) examsTable {
	var (
		ExamIDColumn    = postgres.StringColumn("exam_id")
		StudentIDColumn = postgres.StringColumn("student_id")
		ExamTypeColumn  = postgres.IntegerColumn("exam_type")
		SemesterColumn  = postgres.IntegerColumn("semester")
		MarkColumn      = postgres.IntegerColumn("mark")
		SetAtColumn     = postgres.TimestampzColumn("set_at")
		allColumns      = postgres.ColumnList{ExamIDColumn, StudentIDColumn, ExamTypeColumn, SemesterColumn, MarkColumn, SetAtColumn}
		mutableColumns  = postgres.ColumnList{StudentIDColumn, ExamTypeColumn, SemesterColumn, MarkColumn, SetAtColumn}
	)

	return examsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ExamID:    ExamIDColumn,
		StudentID: StudentIDColumn,
		ExamType:  ExamTypeColumn,
		Semester:  SemesterColumn,
		Mark:      MarkColumn,
		SetAt:     SetAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
