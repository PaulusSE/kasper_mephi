//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SupervisorMarks = newSupervisorMarksTable("public", "supervisor_marks", "")

type supervisorMarksTable struct {
	postgres.Table

	//Columns
	MarkID       postgres.ColumnString
	StudentID    postgres.ColumnString
	Mark         postgres.ColumnInteger
	Semester     postgres.ColumnInteger
	SupervisorID postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SupervisorMarksTable struct {
	supervisorMarksTable

	EXCLUDED supervisorMarksTable
}

// AS creates new SupervisorMarksTable with assigned alias
func (a SupervisorMarksTable) AS(alias string) *SupervisorMarksTable {
	return newSupervisorMarksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SupervisorMarksTable with assigned schema name
func (a SupervisorMarksTable) FromSchema(schemaName string) *SupervisorMarksTable {
	return newSupervisorMarksTable(schemaName, a.TableName(), a.Alias())
}

func newSupervisorMarksTable(schemaName, tableName, alias string) *SupervisorMarksTable {
	return &SupervisorMarksTable{
		supervisorMarksTable: newSupervisorMarksTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newSupervisorMarksTableImpl("", "excluded", ""),
	}
}

func newSupervisorMarksTableImpl(schemaName, tableName, alias string) supervisorMarksTable {
	var (
		MarkIDColumn       = postgres.StringColumn("mark_id")
		StudentIDColumn    = postgres.StringColumn("student_id")
		MarkColumn         = postgres.IntegerColumn("mark")
		SemesterColumn     = postgres.IntegerColumn("semester")
		SupervisorIDColumn = postgres.StringColumn("supervisor_id")
		allColumns         = postgres.ColumnList{MarkIDColumn, StudentIDColumn, MarkColumn, SemesterColumn, SupervisorIDColumn}
		mutableColumns     = postgres.ColumnList{StudentIDColumn, MarkColumn, SemesterColumn, SupervisorIDColumn}
	)

	return supervisorMarksTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		MarkID:       MarkIDColumn,
		StudentID:    StudentIDColumn,
		Mark:         MarkColumn,
		Semester:     SemesterColumn,
		SupervisorID: SupervisorIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
