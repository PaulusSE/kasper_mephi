//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SemesterCount = newSemesterCountTable("public", "semester_count", "")

type semesterCountTable struct {
	postgres.Table

	//Columns
	CountID  postgres.ColumnString
	Amount   postgres.ColumnInteger
	Archived postgres.ColumnBool

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SemesterCountTable struct {
	semesterCountTable

	EXCLUDED semesterCountTable
}

// AS creates new SemesterCountTable with assigned alias
func (a SemesterCountTable) AS(alias string) *SemesterCountTable {
	return newSemesterCountTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SemesterCountTable with assigned schema name
func (a SemesterCountTable) FromSchema(schemaName string) *SemesterCountTable {
	return newSemesterCountTable(schemaName, a.TableName(), a.Alias())
}

func newSemesterCountTable(schemaName, tableName, alias string) *SemesterCountTable {
	return &SemesterCountTable{
		semesterCountTable: newSemesterCountTableImpl(schemaName, tableName, alias),
		EXCLUDED:           newSemesterCountTableImpl("", "excluded", ""),
	}
}

func newSemesterCountTableImpl(schemaName, tableName, alias string) semesterCountTable {
	var (
		CountIDColumn  = postgres.StringColumn("count_id")
		AmountColumn   = postgres.IntegerColumn("amount")
		ArchivedColumn = postgres.BoolColumn("archived")
		allColumns     = postgres.ColumnList{CountIDColumn, AmountColumn, ArchivedColumn}
		mutableColumns = postgres.ColumnList{AmountColumn, ArchivedColumn}
	)

	return semesterCountTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		CountID:  CountIDColumn,
		Amount:   AmountColumn,
		Archived: ArchivedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
