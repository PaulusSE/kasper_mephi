//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ClassroomLoad = newClassroomLoadTable("public", "classroom_load", "")

type classroomLoadTable struct {
	postgres.Table

	//Columns
	LoadID      postgres.ColumnString
	TLoadID     postgres.ColumnString
	Hours       postgres.ColumnInteger
	LoadType    postgres.ColumnString
	MainTeacher postgres.ColumnString
	GroupName   postgres.ColumnString
	SubjectName postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ClassroomLoadTable struct {
	classroomLoadTable

	EXCLUDED classroomLoadTable
}

// AS creates new ClassroomLoadTable with assigned alias
func (a ClassroomLoadTable) AS(alias string) *ClassroomLoadTable {
	return newClassroomLoadTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ClassroomLoadTable with assigned schema name
func (a ClassroomLoadTable) FromSchema(schemaName string) *ClassroomLoadTable {
	return newClassroomLoadTable(schemaName, a.TableName(), a.Alias())
}

func newClassroomLoadTable(schemaName, tableName, alias string) *ClassroomLoadTable {
	return &ClassroomLoadTable{
		classroomLoadTable: newClassroomLoadTableImpl(schemaName, tableName, alias),
		EXCLUDED:           newClassroomLoadTableImpl("", "excluded", ""),
	}
}

func newClassroomLoadTableImpl(schemaName, tableName, alias string) classroomLoadTable {
	var (
		LoadIDColumn      = postgres.StringColumn("load_id")
		TLoadIDColumn     = postgres.StringColumn("t_load_id")
		HoursColumn       = postgres.IntegerColumn("hours")
		LoadTypeColumn    = postgres.StringColumn("load_type")
		MainTeacherColumn = postgres.StringColumn("main_teacher")
		GroupNameColumn   = postgres.StringColumn("group_name")
		SubjectNameColumn = postgres.StringColumn("subject_name")
		allColumns        = postgres.ColumnList{LoadIDColumn, TLoadIDColumn, HoursColumn, LoadTypeColumn, MainTeacherColumn, GroupNameColumn, SubjectNameColumn}
		mutableColumns    = postgres.ColumnList{TLoadIDColumn, HoursColumn, LoadTypeColumn, MainTeacherColumn, GroupNameColumn, SubjectNameColumn}
	)

	return classroomLoadTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		LoadID:      LoadIDColumn,
		TLoadID:     TLoadIDColumn,
		Hours:       HoursColumn,
		LoadType:    LoadTypeColumn,
		MainTeacher: MainTeacherColumn,
		GroupName:   GroupNameColumn,
		SubjectName: SubjectNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
