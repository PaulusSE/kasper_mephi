//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SemesterProgress = newSemesterProgressTable("public", "semester_progress", "")

type semesterProgressTable struct {
	postgres.Table

	// Columns
	SemesterProgressID postgres.ColumnInteger
	StudentID          postgres.ColumnString
	First              postgres.ColumnBool
	Second             postgres.ColumnBool
	Third              postgres.ColumnBool
	Forth              postgres.ColumnBool
	Fifth              postgres.ColumnBool
	Sixth              postgres.ColumnBool
	Seventh            postgres.ColumnBool
	Eighth             postgres.ColumnBool
	ProgressName       postgres.ColumnString
	LastUpdated        postgres.ColumnTimestampz
	ClientID           postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SemesterProgressTable struct {
	semesterProgressTable

	EXCLUDED semesterProgressTable
}

// AS creates new SemesterProgressTable with assigned alias
func (a SemesterProgressTable) AS(alias string) *SemesterProgressTable {
	return newSemesterProgressTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SemesterProgressTable with assigned schema name
func (a SemesterProgressTable) FromSchema(schemaName string) *SemesterProgressTable {
	return newSemesterProgressTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SemesterProgressTable with assigned table prefix
func (a SemesterProgressTable) WithPrefix(prefix string) *SemesterProgressTable {
	return newSemesterProgressTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SemesterProgressTable with assigned table suffix
func (a SemesterProgressTable) WithSuffix(suffix string) *SemesterProgressTable {
	return newSemesterProgressTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSemesterProgressTable(schemaName, tableName, alias string) *SemesterProgressTable {
	return &SemesterProgressTable{
		semesterProgressTable: newSemesterProgressTableImpl(schemaName, tableName, alias),
		EXCLUDED:              newSemesterProgressTableImpl("", "excluded", ""),
	}
}

func newSemesterProgressTableImpl(schemaName, tableName, alias string) semesterProgressTable {
	var (
		SemesterProgressIDColumn = postgres.IntegerColumn("semester_progress_id")
		StudentIDColumn          = postgres.StringColumn("student_id")
		FirstColumn              = postgres.BoolColumn("first")
		SecondColumn             = postgres.BoolColumn("second")
		ThirdColumn              = postgres.BoolColumn("third")
		ForthColumn              = postgres.BoolColumn("forth")
		FifthColumn              = postgres.BoolColumn("fifth")
		SixthColumn              = postgres.BoolColumn("sixth")
		SeventhColumn            = postgres.BoolColumn("seventh")
		EighthColumn             = postgres.BoolColumn("eighth")
		ProgressNameColumn       = postgres.StringColumn("progress_name")
		LastUpdatedColumn        = postgres.TimestampzColumn("last_updated")
		ClientIDColumn           = postgres.StringColumn("client_id")
		allColumns               = postgres.ColumnList{SemesterProgressIDColumn, StudentIDColumn, FirstColumn, SecondColumn, ThirdColumn, ForthColumn, FifthColumn, SixthColumn, SeventhColumn, EighthColumn, ProgressNameColumn, LastUpdatedColumn, ClientIDColumn}
		mutableColumns           = postgres.ColumnList{StudentIDColumn, FirstColumn, SecondColumn, ThirdColumn, ForthColumn, FifthColumn, SixthColumn, SeventhColumn, EighthColumn, ProgressNameColumn, LastUpdatedColumn, ClientIDColumn}
	)

	return semesterProgressTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		SemesterProgressID: SemesterProgressIDColumn,
		StudentID:          StudentIDColumn,
		First:              FirstColumn,
		Second:             SecondColumn,
		Third:              ThirdColumn,
		Forth:              ForthColumn,
		Fifth:              FifthColumn,
		Sixth:              SixthColumn,
		Seventh:            SeventhColumn,
		Eighth:             EighthColumn,
		ProgressName:       ProgressNameColumn,
		LastUpdated:        LastUpdatedColumn,
		ClientID:           ClientIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
